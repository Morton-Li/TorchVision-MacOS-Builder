name: Build Debug

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'TorchVision version (e.g., 0.24.0)'
        required: true
        default: ''
      torch-version:
        description: 'PyTorch version (e.g., 2.9.0)'
        required: true
        default: '2.9.0'
      run-on:
        description: 'Run on which OS?'
        required: true
        default: 'macos-15-intel'

jobs:
  debug_session:
    runs-on: ${{ github.event.inputs.run-on }}
    steps:
      - name: Restore TorchVision source from cache
        id: restore-cache
        uses: actions/cache/restore@v4
        with:
          path: vision
          key: vision-v${{ github.event.inputs.version }}

      - name: Clone TorchVision repo
        if: steps.restore-cache.outputs.cache-hit != 'true'
        run: |
          echo "🎯 Using manually provided tag: v${{ github.event.inputs.version }}"

          git clone --depth 1 --branch "v${{ github.event.inputs.version }}" --recursive https://github.com/pytorch/vision.git vision
          cd vision
          git submodule update --init --recursive --depth 1 || git submodule update --init --recursive --depth 10 || git submodule update --init --recursive

      - name: Save TorchVision source to cache
        id: cache-save
        if: steps.restore-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: vision
          key: vision-v${{ github.event.inputs.version }}

      - name: Install dependencies
        env:
          CMAKE_OSX_ARCHITECTURES: "x86_64"  # 架构（仅使用变量以便后续引用，对编译无影响）
          MACOSX_DEPLOYMENT_TARGET: "11.0"  # 最低支持的 macOS 版本（仅使用变量以便后续引用，对编译无影响）
          PY_VERSION: 3.12
          TORCH_VERSION: ${{ github.event.inputs.torch-version }}
        run: |
          brew install jpeg ccache
          sudo xcode-select --switch /Applications/Xcode_16.4.app

          DEPLOYMENT_TARGET=$(echo $MACOSX_DEPLOYMENT_TARGET | sed 's/\./_/g')
          PY_SHORT=$(echo "$PY_VERSION" | sed 's/\.//')

          wget https://github.com/Morton-Li/PyTorch-MacOS-Builder/releases/download/v${TORCH_VERSION}/torch-${TORCH_VERSION}-cp${PY_SHORT}-cp${PY_SHORT}-macosx_${DEPLOYMENT_TARGET}_${CMAKE_OSX_ARCHITECTURES}.whl

          python$PY_VERSION -m venv venv
          source venv/bin/activate
          pip install --upgrade pip setuptools wheel numpy
          pip install torch-${TORCH_VERSION}-cp${PY_SHORT}-cp${PY_SHORT}-macosx_${DEPLOYMENT_TARGET}_${CMAKE_OSX_ARCHITECTURES}.whl
          pip install --force-reinstall cmake==3.31.6

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
